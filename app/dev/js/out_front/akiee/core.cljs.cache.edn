{:rename-macros {}, :renames {}, :externs {process {platform {}}, document {getElementById {}}}, :use-macros {}, :excludes #{}, :name akiee.core, :imports nil, :requires {repl clojure.browser.repl, clojure.browser.repl clojure.browser.repl, r reagent.core, reagent.core reagent.core, node cljs.nodejs, cljs.nodejs cljs.nodejs}, :uses nil, :defs {modifier {:name akiee.core/modifier, :file "src_front/akiee/core.cljs", :line 20, :column 1, :end-line 20, :end-column 14, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee/core.cljs", :line 20, :column 6, :end-line 20, :end-column 14}, :tag string}, path {:name akiee.core/path, :file "src_front/akiee/core.cljs", :line 21, :column 1, :end-line 21, :end-column 10, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee/core.cljs", :line 21, :column 6, :end-line 21, :end-column 10}, :tag any}, app {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee/core.cljs", :line 190, :column 7, :end-line 190, :end-column 10, :arglists (quote ([])), :doc " -> Component\n  Produces the base comment"}, :name akiee.core/app, :variadic false, :file "src_front/akiee/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc " -> Component\n  Produces the base comment"}, big-bang {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee/core.cljs", :line 201, :column 7, :end-line 201, :end-column 15, :arglists (quote ([]))}, :name akiee.core/big-bang, :variadic false, :file "src_front/akiee/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:div#app}, :order [:div#app]}, :doc nil}