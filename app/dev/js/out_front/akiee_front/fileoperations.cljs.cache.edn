{:rename-macros {}, :renames {}, :externs {require {}, Object {existsSync {}, writeFileSync {}, mkdirSync {}, readFileSync {}}}, :use-macros {is cljs.test, deftest cljs.test}, :excludes #{}, :name akiee-front.fileoperations, :imports nil, :requires {fw akiee-front.filewatcher, akiee-front.filewatcher akiee-front.filewatcher, akiee-front.constants akiee-front.constants, cljs.test cljs.test, nj cljs.nodejs, cljs.nodejs cljs.nodejs}, :uses {dirname akiee-front.constants, filename akiee-front.constants}, :defs {task-file-path {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 62, :column 7, :end-line 62, :end-column 21, :arglists (quote ([d])), :doc "String -> String\n  Consumes a directory path d and produce the path of the task file"}, :name akiee-front.fileoperations/task-file-path, :variadic false, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :end-column 21, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d])), :doc "String -> String\n  Consumes a directory path d and produce the path of the task file"}, fs {:name akiee-front.fileoperations/fs, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 9, :column 1, :end-line 9, :end-column 8, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 9, :column 6, :end-line 9, :end-column 8}, :tag js}, path {:name akiee-front.fileoperations/path, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 10, :column 1, :end-line 10, :end-column 10, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 10, :column 6, :end-line 10, :end-column 10}, :tag any}, create-task-list-file {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 41, :column 7, :end-line 41, :end-column 28, :arglists (quote ([h])), :doc "String -> String\n  consumes the directory of the task file and return the file path of task list,\n  if file is not present, it get's created"}, :name akiee-front.fileoperations/create-task-list-file, :variadic false, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :end-column 28, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h])), :doc "String -> String\n  consumes the directory of the task file and return the file path of task list,\n  if file is not present, it get's created"}, testfile {:name akiee-front.fileoperations/testfile, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 21, :column 1, :end-line 21, :end-column 14, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 21, :column 6, :end-line 21, :end-column 14}, :tag string}, save-task-file {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 81, :column 7, :end-line 81, :end-column 21, :arglists (quote ([c p changed? chfn! wffn]))}, :name akiee-front.fileoperations/save-task-file, :variadic false, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :end-column 21, :method-params ([c p changed? chfn! wffn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 5, :fn-var true, :arglists (quote ([c p changed? chfn! wffn]))}, process {:name akiee-front.fileoperations/process, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 11, :column 1, :end-line 11, :end-column 13, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 11, :column 6, :end-line 11, :end-column 13}, :tag any}, load-task-file {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([p])), :doc "String -> String\n  consumes the path p for a file and returns the content of the file"}, :name akiee-front.fileoperations/load-task-file, :variadic false, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :end-column 21, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "String -> String\n  consumes the path p for a file and returns the content of the file"}, user-home {:protocol-inline nil, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([])), :doc "nil -> String\n  produce the home directory of the user according to plattform"}, :name akiee-front.fileoperations/user-home, :variadic false, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "nil -> String\n  produce the home directory of the user according to plattform"}, org {:name akiee-front.fileoperations/org, :file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 12, :column 1, :end-line 12, :end-column 9, :meta {:file "/home/macco/Listings/electron-akiee/akiee/src_front/akiee_front/fileoperations.cljs", :line 12, :column 6, :end-line 12, :end-column 9}, :tag any}}, :require-macros {cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{= dirname create-task-list-file not= string? :type load-task-file user-home :fail not .indexOf :expected filename :error :pass str :actual :message}, :order [:type :expected :actual :message :error string? user-home :pass :fail not not= .indexOf dirname = create-task-list-file str filename load-task-file]}, :doc "All file operations for Akiee"}